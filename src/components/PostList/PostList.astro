---
//@ts-nocheck // Disable TypeScript checking for this file
/**
 * PostList Component
 * 
 * This component displays a list of posts as cards in a responsive flexbox grid layout.
 * Each card includes an image, title, description, and publication date.
 * 
 * Props:
 * @property {Array<Object>} posts - An array of post objects to be displayed.
 * @property {string} posts[].id - The unique identifier for the post.
 * @property {string} posts[].slug - The slug for the post URL.
 * @property {string} posts[].body - The body content of the post.
 * @property {string} posts[].collection - The collection to which the post belongs.
 * @property {Object} posts[].data - The metadata for the post.
 * @property {string} posts[].data.title - The title of the post.
 * @property {string} posts[].data.description - The description of the post.
 * @property {string} posts[].data.pubDate - The publication date of the post.
 * @property {string} posts[].data.author - The author of the post.
 * @property {ImageMetadata} posts[].data.cover - The cover image for the post.
 * @property {string} posts[].data.coverAlt - The alt text for the cover image.
 * @property {function} posts[].render - A function to render the post content.
 */


import Card from '../Card/Card.astro';

const base = import.meta.env.ASTRO_BASE_URL || '/';;
// Destructure the posts prop
const { posts } = Astro.props;
---

<style>
  .post-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    padding: 1rem;
  }

  .post-list-item {
    flex: 1 1 calc(33.333% - 1rem); /* Adjust the width as needed */
    max-width: 300px; /* Optional: Set a max width for the cards */
    box-sizing: border-box;
  }

  @media (max-width: 768px) {
    .post-list-item {
      flex: 1 1 calc(50% - 1rem); /* Adjust for smaller screens */
    }
  }

  @media (max-width: 480px) {
    .post-list-item {
      flex: 1 1 100%; /* Full width for very small screens */
    }
  }
</style>

<main class="post-list">
  {posts && posts.length > 0 ? (
    posts.map((post) => (
      <div class="post-list-item">
        <h1>base {base}</h1>
        <Card 
          title={post.data.title} 
          description={post.data.description} 
          link={`${base}posts/${post.slug}`} 
          pubDate={post.data.pubDate}
          cover={post.data.cover}
        />
      </div>
    ))
  ) : (
    <p>No posts available.</p>
  )}
</main>