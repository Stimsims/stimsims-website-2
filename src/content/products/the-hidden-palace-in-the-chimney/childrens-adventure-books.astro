---
// Generated by Copilot
// @ts-nocheck
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import PostList from '../components/PostList/PostList.astro'; // Import the PostList component

// Fetch and filter products and posts
async function fetchData() {
  const products = await getCollection('products');
  const bookProducts = await Promise.all(
    products
      .filter(product => product.data.tags && product.data.tags.includes('literacy'))
      .map(async product => {
        const { Content } = await product.render();
        return { ...product, Content };
      })
  );

  const posts = await getCollection('posts');
  const bookPosts = posts.filter(post => post.data.tags && post.data.tags.includes('literacy'));

  return { bookProducts, bookPosts };
}

const { bookProducts, bookPosts } = await fetchData();
const { bookProduct } = await fetchData(); // assuming 'fetchData()' returns an object with a product named 'bookProduct'. You might need more data depending on your schema design.
const productSchema = {
   "@context": "https://schema.org",
   "@type": "Book",  // Use this type for books, as it covers the majority of properties you would expect in a book context.
   
   // These fields should be filled with data about your children's book:
   "name": "The Hidden Palace in the Chimney",               // The title of the item (e.g., A study on...). 
   "description": "A children's book designed to reward attention and interaction.",       // A description of the item (e.g, An in-depth exploration into chemistry and meditation)
   
   // If your website offers digital versions/downloads:
   "offers": {                                     // Offer availability for a product or service. This is how you indicate if it's available for purchase online. 
       "@type":"Offer",                            
       "availability":"https://schema.org/OutOfStock" //"availability":"https://schema.org/InStock"    // The current availability of the item (e.g, InStock)
   }, 
   
   // Indicating if it's a children's book:
   "audience": {                                   // People or organizations that this content is intended for. It can be used to indicate educational audience or target demographic of the product.
       "@type":"People",                           
       "value":"Kids"                              // The educational subject matter (e.g, Literary Fiction) 
   },       
   
   // Miscellaneous details:    
   "publisher": {                                  // Organization responsible for publishing the item - e.g., your organization name or publisher's name etc.
       "@type":"Organization",                      
       "name": "Holly Stimsims"             // The name of the author/illustrator 
   },   
};
---

<Layout title="Children's Books by Stimsims">
  <script type="application/ld+json" set:html={JSON.stringify(productSchema)} />
  <div class="products">
    {bookProducts.map(product => (
      <div class="product" key={product.slug}>
        <div>
          <product.Content />
        </div>
      </div>
    ))}
  </div>
  <h3 class="text-centre">Posts about children's books</h3>
  <PostList posts={bookPosts} /> <!-- Generated by Copilot -->
</Layout>